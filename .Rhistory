install.packages("devtools")
library(devtools)
find(rtools)
find(Rtools)
setwd("D:/Data Science Course/Exploratory Data Analysis/Project 2")
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot5.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot5.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot5.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot5.R')
View(OUTPUT)
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot5.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
View(OUTPUT)
dev.off()
base_plot <- ggplot(
data = OUTPUT,                     # Specify data to use
aes(                               # Generate the aesthetic mapping
x     = OUTPUT$YEAR,             # Map year to X axis
y     = OUTPUT$PM2.5_EMISSIONS,  # Map PM2.5 emissions to Y axis
group = OUTPUT$COUNTY,           # Set the group to seperate by US County
color = OUTPUT$COUNTY            # Map colour to the year to make it visually easier to distinguish
)
)
output_plot <-  base_plot     +
geom_line()   +                                   # Add lines
geom_point()  +                                   # Add points
labs(x = "Year", y = "PM2.5 Emissions (Tons)") +  # Add Axis labels
facet_wrap( COUNTY ~ VEHICLE_TYPE) +                     # Create multiple panels by the vehicle type
geom_smooth( method="lm", se=FALSE, col="red") +  # Add a red smoothed line using linear model, allowing easier identification of the emission trend
labs(title = "PM2.5 Emissions produced by Types of Motor Vechicles Within Baltimore City")
print(output_plot)
base_plot <- ggplot(
data = OUTPUT,                     # Specify data to use
aes(                               # Generate the aesthetic mapping
x     = OUTPUT$YEAR,             # Map year to X axis
y     = OUTPUT$PM2.5_EMISSIONS,  # Map PM2.5 emissions to Y axis
group = OUTPUT$COUNTY,           # Set the group to seperate by US County
color = OUTPUT$YEAR            # Map colour to the year to make it visually easier to distinguish
)
)
output_plot <-  base_plot     +
geom_line()   +                                   # Add lines
geom_point()  +                                   # Add points
labs(x = "Year", y = "PM2.5 Emissions (Tons)") +  # Add Axis labels
facet_wrap( COUNTY ~ VEHICLE_TYPE) +                     # Create multiple panels by the vehicle type
geom_smooth( method="lm", se=FALSE, col="red") +  # Add a red smoothed line using linear model, allowing easier identification of the emission trend
labs(title = "PM2.5 Emissions produced by Types of Motor Vechicles Within Baltimore City")
print(output_plot)
output_plot <-  base_plot     +
geom_line()   +                                   # Add lines
geom_point()  +                                   # Add points
labs(x = "Year", y = "PM2.5 Emissions (Tons)") +  # Add Axis labels
facet_wrap( COUNTY ~ VEHICLE_TYPE, nrow=2) +                     # Create multiple panels by the vehicle type
geom_smooth( method="lm", se=FALSE, col="red") +  # Add a red smoothed line using linear model, allowing easier identification of the emission trend
labs(title = "PM2.5 Emissions produced by Types of Motor Vechicles Within Baltimore City")
print(output_plot)
?geom_line
base_plot <- ggplot(
data = OUTPUT,                     # Specify data to use
aes(                               # Generate the aesthetic mapping
x     = OUTPUT$YEAR,             # Map year to X axis
y     = OUTPUT$PM2.5_EMISSIONS,  # Map PM2.5 emissions to Y axis
group = 1,                       # Set the group to 1, required by geom_line
color = OUTPUT$COUNTY            # Map colour to the year to make it visually easier to distinguish
)
)
#.  Add plot layers to the base plot
output_plot <-  base_plot     +
geom_line()   +                                   # Add lines
geom_point()  +                                   # Add points
labs(x = "Year", y = "PM2.5 Emissions (Tons)") +  # Add Axis labels
facet_wrap( COUNTY ~ VEHICLE_TYPE, nrow=2) +                     # Create multiple panels by the vehicle type
geom_smooth( method="lm", se=FALSE, col="red") +  # Add a red smoothed line using linear model, allowing easier identification of the emission trend
labs(title = "PM2.5 Emissions produced by Types of Motor Vechicles Within Baltimore City")
print(output_plot)
View(OUTPUT)
View(NEI)
NEI     <- readRDS("summarySCC_PM25.rds")             # Load National Emission Inventory with PM2.5 Emission Data
SCC     <- readRDS("Source_Classification_Code.rds")  # Load Source Classification Code
D <- unique(NEI$fips)
D
D <- unique(NEI$fips[ NEI$fips == 06037,])
D <- NEI$fips[NEI$fips == 06037,]
View(NEI)
D <- NEI[NEI$fips == 06037,]
D
D <- NEI[NEI$fips == 06037,]
D
NEI     <- readRDS("summarySCC_PM25.rds")             # Load National Emission Inventory with PM2.5 Emission Data
SCC     <- readRDS("Source_Classification_Code.rds")  # Load Source Classification Code
NEI     <- readRDS("summarySCC_PM25.rds")             # Load National Emission Inventory with PM2.5 Emission Data
write.csv(NEI, file="NEIDATA.csv")
D <- NEI[NEI$fips == 6037,]
View(D)
)OUTPUT <- aggregate(
formula = NEI$Emissions~NEI$fips,    # Use emission and group by year, type of vehicle and US county
data    = NEI,                                                    # specify the data as NEI
FUN     = sum                                                     # Set the function to sum values
)
OUTPUT <- aggregate(
formula = NEI$Emissions~NEI$fips,    # Use emission and group by year, type of vehicle and US county
data    = NEI,                                                    # specify the data as NEI
FUN     = sum                                                     # Set the function to sum values
)
View(OUTPUT)
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot3.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot2.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
View(OUTPUT)
dev.off()
output_plot <-  base_plot     +
geom_line()   +                                   # Add lines
geom_point()  +                                   # Add points
labs(x = "Year", y = "PM2.5 Emissions (Tons)") +  # Add Axis labels
facet_wrap( ~ VEHICLE_TYPE) +                     # Create multiple panels by the vehicle type
geom_smooth( method="lm", se=FALSE, col="red") +  # Add a red smoothed line using linear model, allowing easier identification of the emission trend
labs(title = "PM2.5 Emissions produced by Types of Motor Vechicles Within Baltimore City")
print(output_plot)
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
?aes
NEI     <- readRDS("summarySCC_PM25.rds")             # Load National Emission Inventory with PM2.5 Emission Data
SCC     <- readRDS("Source_Classification_Code.rds")  # Load Source Classification Code
View(NEI)
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
dev.off()
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
dev.off()
base_plot <- ggplot(
data = OUTPUT,                     # Specify data to use
aes(                               # Generate the aesthetic mapping
x     = OUTPUT$YEAR,             # Map year to X axis
y     = OUTPUT$PM2.5_EMISSIONS,  # Map PM2.5 emissions to Y axis
group = OUTPUT$COUNTY,           # Set the group to 1, required by geom_line
color = OUTPUT$COUNTY            # Map colour to the year to make it visually easier to distinguish
)
)
output_plot <-  base_plot     +
geom_line()   +                                   # Add lines
geom_point()  +                                   # Add points
labs(x = "Year", y = "PM2.5 Emissions (Tons)") +  # Add Axis labels
facet_wrap( COUNTY ~ VEHICLE_TYPE, nrow = 2) +                     # Create multiple panels by the vehicle type
geom_smooth( method="lm", se=FALSE, col="white") +  # Add a red smoothed line using linear model, allowing easier identification of the emission trend
labs(title = "PM2.5 Emissions produced by Types of Motor Vechicles Within Baltimore City")
print(output_plot)
base_plot <- ggplot(
data = OUTPUT,                     # Specify data to use
aes(                               # Generate the aesthetic mapping
x     = OUTPUT$YEAR,             # Map year to X axis
y     = OUTPUT$PM2.5_EMISSIONS,  # Map PM2.5 emissions to Y axis
group = 1,           # Set the group to 1, required by geom_line
color = OUTPUT$COUNTY            # Map colour to the year to make it visually easier to distinguish
)
)
output_plot <-  base_plot     +
geom_line()   +                                   # Add lines
geom_point()  +                                   # Add points
labs(x = "Year", y = "PM2.5 Emissions (Tons)") +  # Add Axis labels
facet_wrap( COUNTY ~ VEHICLE_TYPE, nrow = 2) +                     # Create multiple panels by the vehicle type
geom_smooth( method="lm", se=FALSE, col="white") +  # Add a red smoothed line using linear model, allowing easier identification of the emission trend
labs(title = "PM2.5 Emissions produced by Types of Motor Vechicles Within Baltimore City")
print(output_plot)
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
dev.off()
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
output_plot <-  base_plot     +
geom_line()   +                                   # Add lines
geom_point()  +                                   # Add points
labs(x = "Year", y = "PM2.5 Emissions (Tons)") +  # Add Axis labels
facet_wrap( ~ COUNTY  ) +                     # Create multiple panels by the vehicle type
geom_smooth( method="lm", se=FALSE, col="purple") +  # Add a red smoothed line using linear model, allowing easier identification of the emission trend
labs(title = "PM2.5 Emissions produced by Types of Motor Vechicles Within Baltimore City")
print(output_plot)
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 2/plot6.R')
setwd("D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment")
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_X)
View(TST_X)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_X)
?read.delim
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_X)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_Y)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_Y)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_X)
?read.delim2
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_X)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_X)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_X)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TST_X)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(ACTIVITY_TYPE)
View(FEATURES)
View(FEATURES)
View(FEATURES)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(TEST_X)
View(ACTIVITY_TYPE)
?rm
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(FINAL_MASTER)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(FINAL_MASTER)
View(FINAL_MASTER)
?grep1
?grep1
grepl()
?grep
View(FINAL_MASTER)
COLNAME_MASTER <- colNames(FINAL_MASTER)
COLNAME_MASTER <- colnames(FINAL_MASTER)
COL_TO_KEEP    <- grep("id..",)
COL_TO_KEEP    <- grep("id..", COLNAME_MASTER)
COL_TO_KEEP
COL_TO_KEEP    <- grep("id", COLNAME_MASTER)
COL_TO_KEEP
COL_TO_KEEP    <- grep("id", COLNAME_MASTER) | grep("mean", COLNAME_MASTER) | grep("std", COLNAME_MASTER)
COL_TO_KEEP    <- grep("id|mean|std", COLNAME_MASTER)
FINAL_MASTER   <- FINAL_MASTER[,COL_TO_KEEP]
View(FINAL_MASTER)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(FINAL_MASTER)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(FINAL_MASTER)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(FINAL_MASTER)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
grep
?grep
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(FINAL_MASTER)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(FINAL_MASTER)
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(FINAL_MASTER)
gsub
?gsub
View(FINAL_MASTER)
View(FINAL_MASTER)
COLUMN_NAMES   <- colnames(FINAL_MASTER)
COLUMN_NAMES   <- gsub("\\()","")
COLUMN_NAMES   <- gsub("\\()","", COLUMN_NAMES)
View(FINAL_MASTER)
COLUMN_NAMES
COLUMN_NAMES   <- gsub("\\()" ,""       , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("std"  ,"StdDev" , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("mean" ,"Mean"   , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("\\-"  ,"_"      , COLUMN_NAMES)       ## I just prefer underscores
COLUMN_NAMES
COLUMN_NAMES   <- gsub("^(t)" ,"Time"   , COLUMN_NAMES)       ## Relabel all the t prefixes to time
COLUMN_NAMES   <- gsub("^(f)" ,"Freq"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES
COLUMN_NAMES   <- colnames(FINAL_MASTER)
COLUMN_NAMES   <- gsub("\\()" ,""       , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("std"  ,"StdDev" , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("mean" ,"Mean"   , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("\\-"  ,"_"      , COLUMN_NAMES)       ## I just prefer underscores
COLUMN_NAMES   <- gsub("^(t)" ,"Time_"   , COLUMN_NAMES)       ## Relabel all the t prefixes to time
COLUMN_NAMES   <- gsub("^(f)" ,"Freq_"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES
COLUMN_NAMES   <- colnames(FINAL_MASTER)
COLUMN_NAMES   <- gsub("\\()" ,""               , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("std"  ,"StdDev"         , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("mean" ,"Mean"           , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("\\-"  ,"_"              , COLUMN_NAMES)       ## I just prefer underscores
COLUMN_NAMES   <- gsub("^(t)" ,"Time_"          , COLUMN_NAMES)       ## Relabel all the t prefixes to time
COLUMN_NAMES   <- gsub("^(f)" ,"Freq_"          , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES   <- gsub("Acc" ,"_Acceleration"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES   <- gsub("Gyro" ,"_Gyro"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES   <- gsub("Jerk" ,"_Jerk"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES   <- gsub("Mag" ,"_Magnitude"   , COLUMN_NAMES)       ## Relabel all
COLUMN_NAMES
COLUMN_NAMES   <- colnames(FINAL_MASTER)
COLUMN_NAMES
COLUMN_NAMES   <- colnames(FINAL_MASTER)
COLUMN_NAMES   <- gsub("\\()" ,""               , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("std"  ,"StdDev"         , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("mean" ,"Mean"           , COLUMN_NAMES)
COLUMN_NAMES   <- gsub("\\-"  ,"_"              , COLUMN_NAMES)       ## I just prefer underscores
COLUMN_NAMES   <- gsub("^(t)" ,"Time_"          , COLUMN_NAMES)       ## Relabel all the t prefixes to time
COLUMN_NAMES   <- gsub("^(f)" ,"Freq_"          , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES   <- gsub("Acc" ,"_Acceleration"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES   <- gsub("Gyro" ,"_Gyro"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES   <- gsub("Jerk" ,"_Jerk"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES   <- gsub("Mag" ,"_Magnitude"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
COLUMN_NAMES   <- gsub("BodyBody" ,"Body"   , COLUMN_NAMES)       ## Relabel all the f prefixes to indicate frequency
#/ OUTPUT RESULTS TO FILE
COLUMN_NAMES
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
rm(COLUMN_NAMES)
?aggregate
library(data.table)
dt1 <- data.table(FINAL_MASTER)
View(dt1)
?setkey
setkey(dt1, subject_id, activity_id)
?melt
?setdiff
ID_COLUMNS = c("subject_id", "activity_id", "activity_description")
DATA_COLUMNS = setdiff(colnames(FINAL_MASTER), ID_COLUMNS)
ID_COLUMNS = c("subject_id", "activity_id", "activity_description")
DATA_COLUMNS = setdiff(colnames(FINAL_MASTER), ID_COLUMNS)
MOLTEN_DATA  = melt(FINAL_MASTER, id = ID_COLUMNS, measure.vars = DATA_COLUMNS)
?melt
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
View(MOLTEN_DATA)
ID_COLUMNS <- c("subject_id", "activity_id", "activity_description")
DATA_COLUMNS <- setdiff(colnames(FINAL_MASTER), ID_COLUMNS)
MOLTEN_DATA  <- melt(FINAL_MASTER, id = ID_COLUMNS, measure.vars = DATA_COLUMNS)
?dcast
?ddcast
?dcast
View(MOLTEN_DATA)
TIDY_DATA    <- dcast( data = MOLTEN_DATA,
formula = subject_id + activity_description ~ variable,
fun.aggregate = mean)
View(TIDY_DATA)
rm(list=ls())
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
source('D:/Data Science Course/Getting And Cleaning Data/GACD_Assignment/run_analysis.R')
install.packages("reshape2")
source("./run_analysis.R")
TIDY_DATA  <- read.table('./tidy_data.txt',header = FALSE)
TIDY_DATA  <- read.table('tidy_data.txt',header = FALSE)
TIDY_DATA  <- read.table('./tidy_data.txt',header = TRUE)
View(TIDY_DATA)
